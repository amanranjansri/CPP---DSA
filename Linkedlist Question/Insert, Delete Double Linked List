#include <iostream>
using namespace std;

class Node
{
public:
    int data;
    Node *prev;
    Node *next;

    // constructioin
    Node(int data)
    {
        this->data = data;
        this->prev = NULL;
        this->next = NULL;
    }

    ~Node()
    {
        int val = this->data;
        if (next != NULL)
        {
            delete next;
            next = NULL;
        }
        cout << "memory free for node with data " << val << endl;
    }
};

void print(Node *head)
{
    Node *temp = head;
    while (temp != NULL)
    {
        cout << temp->data << " ";
        temp = temp->next;
    }
    cout << endl;
}

int gestlength(Node *head)
{
    Node *temp = head;
    int cnt = 0;

    while (temp != NULL)
    {
        cnt++;
        temp = temp->next;
    }
    return cnt;
}

void insertathead(Node *&head, Node *&tail, int data)
{
    if (head == NULL)
    {
        // create a new node
        Node *node2 = new Node(data);
        head = node2;
        tail = node2;
    }
    else
    {
        // create a new node
        Node *node2 = new Node(data);
        node2->next = head;
        head->prev = node2;
        head = node2;
    }
}

void insertattail(Node *&head, Node *&tail, int data)
{
    if (tail == NULL)
    {
        // create a new node
        Node *node3 = new Node(data);
        tail = node3;
        head = node3;
    }
    else
    {
        // create a new node tail = node3;
        Node *node3 = new Node(data);
        tail->next = node3;
        node3->prev = tail;
        tail = node3;
    }
}

void insertatposition(Node *&head, Node *&tail, int position, int data)
{
    if (position == 1)
    {
        insertathead(head, tail, data);
        return;
    }
    int cnt = 1;
    Node *temp = head;

    while (cnt < position - 1)
    {
        temp = temp->next;
        cnt++;
    }

    if (temp->next == NULL)
    {
        insertattail(head, tail, data);
        return;
    }

    // create a new node
    Node *newnode = new Node(data);
    newnode->next = temp->next;
    temp->next->prev = newnode;
    temp->next = newnode;
    newnode->prev = temp;
}

void deletenode(Node *&head, Node *&tail, int position)
{
    if (position == 1)
    {
        Node *temp = head;
        head = head->next;
        temp->next->prev = NULL;
        temp->next = NULL;
        delete temp;
    }
    else
    {
        Node *prev = NULL;
        Node *curr = head;

        int cnt = 1;
        while (cnt < position)
        {
            prev = curr;
            curr = curr->next;
            cnt++;
        }
        curr->prev = NULL;
        prev->next = curr->next;
        curr->next = NULL;

        delete curr;
    }
}

int main()
{
    // create a new node
    Node *head = NULL;
    Node *tail = NULL;

    print(head);
    // cout << gestlength(head) << endl;

    insertathead(head, tail, 90);
    print(head);

    insertathead(head, tail, 80);
    print(head);

    insertathead(head, tail, 70);
    print(head);

    insertattail(head, tail, 110);
    print(head);

    insertattail(head, tail, 120);
    print(head);

    insertatposition(head, tail, 4, 95);
    print(head);

    deletenode(head, tail, 2);
    print(head);
  
    return 0;
}
